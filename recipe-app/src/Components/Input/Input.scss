$main-color: #FF644B;
$box-shadow: 0px 0px 23px 0px #cccccc;
$light-color: #fff;
$input-bg-color: #f1f1f1;
$input-border-color: #e4e4e4;
$input-color: #c5c5c2;

form {
  display: flex;
  flex-flow: column;
  label{
    font-size: 0.85rem;
    font-weight: bold;
    padding: 0.2rem;
  }
  input, textarea {
    margin-bottom: 1rem;
    outline: none;
    padding: 0.5rem;
    border: 1px solid $input-border-color;
    background: $input-bg-color;
    border-radius: 5px;
    display: flex;
    flex-flow: column;
    &:focus {
      box-shadow:0 0 1px 1px $main-color;
      border: 1px solid $main-color;
    }
    &::placeholder{
      color: $input-color;
      opacity: 1;
    }
  }
  textarea {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .error {
    color: red;
    margin-top: 0;
  }
  input.ng-touched.ng-invalid {
    box-shadow:0 0 1px 1px red;
    border: 1px solid red;
    background: #FEF1F2;
  }

  .radio-container {
    display: flex;
    margin:-10px;
    .radio-row {
        flex-grow: 1;
        position: relative;
        margin: 10px;
    }
   
    @supports(-webkit-appearance: none) or (-moz-appearance: none) {
        input[type=radio] {
            -webkit-appearance: none;
            -moz-appearance: none;
            height: 21px;
            padding: 1rem;
            outline: none;
            display: inline-block;
            vertical-align: top;
            position: relative;
            margin: 0;
            cursor: pointer;
            border: 1px solid var(--border);
            background:#e4e4e4;
            color: $light-color;
            transition: 0.3s ease-in;
            width: 100%;
            border: 1px solid $input-border-color;
            &:checked {
              background: $main-color;
            }
            &:not(:checked) {
                background-color: gray;
            }
            &:disabled {
              cursor: not-allowed;
              opacity: .5;
            }
            &:hover {
              box-shadow: $box-shadow;
            }
            &:focus {
                box-shadow:0 0 1px 1px $main-color;
                border: 1px solid $main-color;
                color: $light-color;
            }
            & + label {
              color: #fff;
              cursor: pointer;
              position: absolute;
              top: 50%;  /* position the top  edge of the element at the middle of the parent */
              left: 50%; /* position the left edge of the element at the middle of the parent */
              transform: translate(-50%, -50%); /* This is a shorthand of translateX(-50%) and translateY(-50%) */
            }
          }
    }
}
}


